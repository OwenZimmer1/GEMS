{"ast":null,"code":"var _jsxFileName = \"/Users/owenzimmer/graph-dominator/src/components/GraphEditor.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback } from 'react';\nimport { ReactFlow, Background, Controls, applyNodeChanges, applyEdgeChanges } from '@xyflow/react';\nimport '@xyflow/react/dist/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GraphEditor = ({\n  nodes,\n  setNodes,\n  edges,\n  setEdges\n}) => {\n  _s();\n  const onNodesChange = changes => setNodes(nds => applyNodeChanges(changes, nds));\n  const onEdgesChange = changes => setEdges(eds => applyEdgeChanges(changes, eds));\n  const onConnect = params => setEdges(eds => [...eds, {\n    ...params,\n    id: `${params.source}-${params.target}`\n  }]);\n  const onDrop = useCallback(event => {\n    event.preventDefault();\n    const reactFlowBounds = event.target.getBoundingClientRect();\n    const type = event.dataTransfer.getData('application/reactflow');\n    if (!type) return;\n\n    // Calculate drop position relative to the graph container\n    const position = {\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top\n    };\n    const id = `${nodes.length + 1}`;\n    const newNode = {\n      id,\n      type,\n      position,\n      data: {\n        label: `Node ${id}`\n      }\n    };\n    setNodes(nds => nds.concat(newNode));\n  }, [nodes.length, setNodes]);\n  const onDragOver = useCallback(event => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '90vh'\n    },\n    onDrop: onDrop,\n    onDragOver: onDragOver,\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onConnect: onConnect,\n      fitView: true,\n      children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(GraphEditor, \"dgrRppj1K5ayoH/1qO3eiZRqL+Y=\");\n_c = GraphEditor;\nvar _c;\n$RefreshReg$(_c, \"GraphEditor\");","map":{"version":3,"names":["React","useCallback","ReactFlow","Background","Controls","applyNodeChanges","applyEdgeChanges","jsxDEV","_jsxDEV","GraphEditor","nodes","setNodes","edges","setEdges","_s","onNodesChange","changes","nds","onEdgesChange","eds","onConnect","params","id","source","target","onDrop","event","preventDefault","reactFlowBounds","getBoundingClientRect","type","dataTransfer","getData","position","x","clientX","left","y","clientY","top","length","newNode","data","label","concat","onDragOver","dropEffect","style","width","height","children","fitView","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/owenzimmer/graph-dominator/src/components/GraphEditor.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { ReactFlow,\n  Background,\n  Controls,\n  Node,\n  Edge,\n  OnNodesChange,\n  OnEdgesChange,\n  OnConnect,\n  applyNodeChanges,\n  applyEdgeChanges,\n} from '@xyflow/react';\nimport '@xyflow/react/dist/style.css';\nimport { XYPosition } from '@xyflow/react';\n\ntype GraphEditorProps = {\n  nodes: Node[];\n  setNodes: React.Dispatch<React.SetStateAction<Node[]>>;\n  edges: Edge[];\n  setEdges: React.Dispatch<React.SetStateAction<Edge[]>>;\n};\n\nexport const GraphEditor: React.FC<GraphEditorProps> = ({\n    nodes,\n    setNodes,\n    edges,\n    setEdges,\n  }) => {\n    const onNodesChange: OnNodesChange = (changes) =>\n        setNodes((nds) => applyNodeChanges(changes, nds));\n      \n      const onEdgesChange: OnEdgesChange = (changes) =>\n        setEdges((eds) => applyEdgeChanges(changes, eds));\n      \n\n  const onConnect: OnConnect = (params) =>\n    setEdges((eds) => [...eds, { ...params, id: `${params.source}-${params.target}` }]);\n\n  const onDrop = useCallback(\n    (event: React.DragEvent) => {\n      event.preventDefault();\n      const reactFlowBounds = (event.target as HTMLElement).getBoundingClientRect();\n      const type = event.dataTransfer.getData('application/reactflow');\n      if (!type) return;\n\n      // Calculate drop position relative to the graph container\n      const position: XYPosition = {\n        x: event.clientX - reactFlowBounds.left,\n        y: event.clientY - reactFlowBounds.top,\n      };\n\n      const id = `${nodes.length + 1}`;\n      const newNode: Node = {\n        id,\n        type,\n        position,\n        data: { label: `Node ${id}` },\n      };\n\n      setNodes((nds) => nds.concat(newNode));\n    },\n    [nodes.length, setNodes]\n  );\n\n  const onDragOver = useCallback((event: React.DragEvent) => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  }, []);\n\n  return (\n    <div style={{ width: '100%', height: '90vh' }} onDrop={onDrop} onDragOver={onDragOver}>\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        onConnect={onConnect}\n        fitView\n      >\n        <Background />\n        <Controls />\n      </ReactFlow>\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
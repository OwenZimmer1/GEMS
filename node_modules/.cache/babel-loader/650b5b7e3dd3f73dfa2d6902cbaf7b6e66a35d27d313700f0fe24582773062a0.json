{"ast":null,"code":"// …\nconst handleCopy = useCallback(() => {\n  // 1. grab everything from the canvas\n  const allNodes = reactFlowInstance.getNodes();\n  const allEdges = reactFlowInstance.getEdges();\n\n  // 2. filter selected nodes and cast to your NodeData type\n  const selNodes = allNodes.filter(n => n.selected).map(n => n);\n  const selNodeIds = new Set(selNodes.map(n => n.id));\n\n  // 3. filter selected edges that connect only selected nodes\n  const selEdges = allEdges.filter(e => e.selected && selNodeIds.has(e.source) && selNodeIds.has(e.target)).map(e => e);\n\n  // 4. set into buffer\n  setCopyBuffer({\n    nodes: selNodes,\n    edges: selEdges\n  });\n}, [reactFlowInstance]);","map":{"version":3,"names":["handleCopy","useCallback","allNodes","reactFlowInstance","getNodes","allEdges","getEdges","selNodes","filter","n","selected","map","selNodeIds","Set","id","selEdges","e","has","source","target","setCopyBuffer","nodes","edges"],"sources":["/Users/owenzimmer/GEMS/src/components/GraphEditor.tsx"],"sourcesContent":["// …\nconst handleCopy = useCallback(() => {\n  // 1. grab everything from the canvas\n  const allNodes = reactFlowInstance.getNodes();\n  const allEdges = reactFlowInstance.getEdges();\n\n  // 2. filter selected nodes and cast to your NodeData type\n  const selNodes = allNodes\n    .filter((n) => n.selected)\n    .map((n) => n as Node<NodeData>);\n\n  const selNodeIds = new Set(selNodes.map((n) => n.id));\n\n  // 3. filter selected edges that connect only selected nodes\n  const selEdges = allEdges\n    .filter((e) => e.selected && selNodeIds.has(e.source) && selNodeIds.has(e.target))\n    .map((e) => e as Edge);\n\n  // 4. set into buffer\n  setCopyBuffer({ nodes: selNodes, edges: selEdges });\n}, [reactFlowInstance]);\n"],"mappings":"AAAA;AACA,MAAMA,UAAU,GAAGC,WAAW,CAAC,MAAM;EACnC;EACA,MAAMC,QAAQ,GAAGC,iBAAiB,CAACC,QAAQ,CAAC,CAAC;EAC7C,MAAMC,QAAQ,GAAGF,iBAAiB,CAACG,QAAQ,CAAC,CAAC;;EAE7C;EACA,MAAMC,QAAQ,GAAGL,QAAQ,CACtBM,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,QAAQ,CAAC,CACzBC,GAAG,CAAEF,CAAC,IAAKA,CAAmB,CAAC;EAElC,MAAMG,UAAU,GAAG,IAAIC,GAAG,CAACN,QAAQ,CAACI,GAAG,CAAEF,CAAC,IAAKA,CAAC,CAACK,EAAE,CAAC,CAAC;;EAErD;EACA,MAAMC,QAAQ,GAAGV,QAAQ,CACtBG,MAAM,CAAEQ,CAAC,IAAKA,CAAC,CAACN,QAAQ,IAAIE,UAAU,CAACK,GAAG,CAACD,CAAC,CAACE,MAAM,CAAC,IAAIN,UAAU,CAACK,GAAG,CAACD,CAAC,CAACG,MAAM,CAAC,CAAC,CACjFR,GAAG,CAAEK,CAAC,IAAKA,CAAS,CAAC;;EAExB;EACAI,aAAa,CAAC;IAAEC,KAAK,EAAEd,QAAQ;IAAEe,KAAK,EAAEP;EAAS,CAAC,CAAC;AACrD,CAAC,EAAE,CAACZ,iBAAiB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
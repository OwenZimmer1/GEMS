{"ast":null,"code":"var _jsxFileName = \"/Users/owenzimmer/GEMS/src/App.tsx\",\n  _s = $RefreshSig$();\n// src/App.tsx\nimport React, { useState, useCallback } from 'react';\nimport { useReactFlow } from '@xyflow/react';\nimport { Sidebar } from './components/Sidebar';\nimport { ControlsPanel } from './components/ControlsPanel';\nimport { GraphEditor } from './components/GraphEditor';\nimport { computeDominatingSet } from './algorithms/dominatingSet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  const reactFlowInstance = useReactFlow();\n\n  // Compute dominating set and highlight\n  const handleCompute = useCallback(() => {\n    const graph = {\n      nodes: nodes.map(n => ({\n        id: n.id\n      })),\n      edges: edges.map(e => ({\n        source: e.source,\n        target: e.target\n      }))\n    };\n    const ds = computeDominatingSet(graph);\n    setNodes(nds => nds.map(n => ds.has(n.id) ? {\n      ...n,\n      style: {\n        ...n.style,\n        backgroundColor: 'lightgreen'\n      }\n    } : {\n      ...n,\n      style: {}\n    }));\n  }, [nodes, edges]);\n\n  // Reset any dominating‐set highlighting\n  const handleReset = useCallback(() => {\n    setNodes(nds => nds.map(n => ({\n      ...n,\n      style: {} // clear all inline styles\n    })));\n  }, []);\n\n  // Add node (existing drag/drop + addNode button logic omitted for brevity)\n  const addNode = useCallback(type => {\n    const {\n      x: panX,\n      y: panY,\n      zoom\n    } = reactFlowInstance.getViewport();\n    const position = {\n      x: -panX + 100,\n      y: -panY + 100\n    };\n    const id = `${Date.now()}`;\n    const newNode = {\n      id,\n      type,\n      position,\n      data: {\n        label: `Node ${nodes.length + 1}`\n      }\n    };\n    setNodes(nds => [...nds, newNode]);\n  }, [reactFlowInstance, nodes.length]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      onAddNode: addNode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flexGrow: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(ControlsPanel, {\n        onCompute: handleCompute,\n        onReset: handleReset // pass reset handler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GraphEditor, {\n        nodes: nodes,\n        setNodes: setNodes,\n        edges: edges,\n        setEdges: setEdges\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dtIIjKoUXsUTP2a+I/pWW1sfKEU=\", false, function () {\n  return [useReactFlow];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","useReactFlow","Sidebar","ControlsPanel","GraphEditor","computeDominatingSet","jsxDEV","_jsxDEV","App","_s","nodes","setNodes","edges","setEdges","reactFlowInstance","handleCompute","graph","map","n","id","e","source","target","ds","nds","has","style","backgroundColor","handleReset","addNode","type","x","panX","y","panY","zoom","getViewport","position","Date","now","newNode","data","label","length","display","height","children","onAddNode","fileName","_jsxFileName","lineNumber","columnNumber","flexGrow","flexDirection","padding","onCompute","onReset","_c","$RefreshReg$"],"sources":["/Users/owenzimmer/GEMS/src/App.tsx"],"sourcesContent":["// src/App.tsx\nimport React, { useState, useCallback } from 'react';\nimport { Node, Edge, useReactFlow } from '@xyflow/react';\nimport { Sidebar } from './components/Sidebar';\nimport { ControlsPanel } from './components/ControlsPanel';\nimport { GraphEditor } from './components/GraphEditor';\nimport { computeDominatingSet, Graph } from './algorithms/dominatingSet';\n\ntype NodeData = { label: string };\n\nexport default function App() {\n  const [nodes, setNodes] = useState<Node<NodeData>[]>([]);\n  const [edges, setEdges] = useState<Edge[]>([]);\n  const reactFlowInstance = useReactFlow();\n\n  // Compute dominating set and highlight\n  const handleCompute = useCallback(() => {\n    const graph: Graph = {\n      nodes: nodes.map((n) => ({ id: n.id })),\n      edges: edges.map((e) => ({ source: e.source, target: e.target })),\n    };\n    const ds = computeDominatingSet(graph);\n\n    setNodes((nds) =>\n      nds.map((n) =>\n        ds.has(n.id)\n          ? { ...n, style: { ...n.style, backgroundColor: 'lightgreen' } }\n          : { ...n, style: {} }\n      )\n    );\n  }, [nodes, edges]);\n\n  // Reset any dominating‐set highlighting\n  const handleReset = useCallback(() => {\n    setNodes((nds) =>\n      nds.map((n) => ({\n        ...n,\n        style: {},          // clear all inline styles\n      }))\n    );\n  }, []);\n\n  // Add node (existing drag/drop + addNode button logic omitted for brevity)\n  const addNode = useCallback((type: string) => {\n    const { x: panX, y: panY, zoom } = reactFlowInstance.getViewport();\n    const position = { x: -panX + 100, y: -panY + 100 };\n    const id = `${Date.now()}`;\n    const newNode: Node<NodeData> = {\n      id,\n      type,\n      position,\n      data: { label: `Node ${nodes.length + 1}` },\n    };\n    setNodes((nds) => [...nds, newNode]);\n  }, [reactFlowInstance, nodes.length]);\n\n  return (\n    <div style={{ display: 'flex', height: '100vh' }}>\n      <Sidebar onAddNode={addNode} />\n\n      <div\n        style={{\n          flexGrow: 1,\n          display: 'flex',\n          flexDirection: 'column',\n          padding: 10,\n        }}\n      >\n        <ControlsPanel\n          onCompute={handleCompute}\n          onReset={handleReset}   // pass reset handler\n        />\n\n        {/* manual edge‐adding UI here if you have it */}\n\n        <GraphEditor\n          nodes={nodes}\n          setNodes={setNodes}\n          edges={edges}\n          setEdges={setEdges}\n        />\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
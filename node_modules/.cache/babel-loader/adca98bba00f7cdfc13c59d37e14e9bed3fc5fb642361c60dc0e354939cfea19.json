{"ast":null,"code":"var _jsxFileName = \"/Users/owenzimmer/GEMS/src/components/GraphEditor.tsx\",\n  _s = $RefreshSig$();\n// GraphEditor.tsx\nimport React from 'react';\nimport { ReactFlow, Background, Controls, applyNodeChanges, applyEdgeChanges, useReactFlow } from '@xyflow/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function GraphEditor({\n  nodes,\n  setNodes,\n  edges,\n  setEdges\n}) {\n  _s();\n  const reactFlowInstance = useReactFlow();\n  const onNodesChange = changes => setNodes(nds => applyNodeChanges(changes, nds));\n  const onEdgesChange = changes => setEdges(eds => applyEdgeChanges(changes, eds));\n  const onConnect = params => setEdges(eds => [...eds, {\n    ...params,\n    id: `${params.source}-${params.target}`\n  }]);\n\n  // When the user presses Delete/Backspace with nodes selected,\n  // ReactFlow will call this with the array of deleted nodes\n  const onNodesDelete = deleted => {\n    const deletedIds = new Set(deleted.map(n => n.id));\n    // remove those nodes\n    setNodes(nds => nds.filter(n => !deletedIds.has(n.id)));\n    // also remove edges incident to them\n    setEdges(eds => eds.filter(e => !deletedIds.has(e.source) && !deletedIds.has(e.target)));\n  };\n\n  // When the user deletes edges (via delete key or toolbar), this runs\n  const onEdgesDelete = deleted => {\n    const deletedIds = new Set(deleted.map(e => e.id));\n    setEdges(eds => eds.filter(e => !deletedIds.has(e.id)));\n  };\n\n  // Allow drag & drop from sidebar\n  const onDragOver = e => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  };\n  const onDrop = e => {\n    e.preventDefault();\n    const bounds = e.currentTarget.getBoundingClientRect();\n    const type = e.dataTransfer.getData('application/reactflow');\n    if (!type) return;\n    const dropX = e.clientX - bounds.left;\n    const dropY = e.clientY - bounds.top;\n    const {\n      x: panX,\n      y: panY,\n      zoom\n    } = reactFlowInstance.getViewport();\n    const position = {\n      x: dropX / zoom - panX,\n      y: dropY / zoom - panY\n    };\n    const newNode = {\n      id: `${Date.now()}`,\n      type,\n      position,\n      data: {\n        label: `Node ${nodes.length + 1}`\n      }\n    };\n    setNodes(nds => nds.concat(newNode));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '90vh'\n    },\n    onDrop: onDrop,\n    onDragOver: onDragOver\n    // Make focusable so the delete key triggers the callbacks\n    ,\n    tabIndex: 0,\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onConnect: onConnect,\n      onNodesDelete: onNodesDelete,\n      onEdgesDelete: onEdgesDelete,\n      fitView: true,\n      children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(GraphEditor, \"ASOjppUSBhZZpJr8IxV5IpLC74k=\", false, function () {\n  return [useReactFlow];\n});\n_c = GraphEditor;\nvar _c;\n$RefreshReg$(_c, \"GraphEditor\");","map":{"version":3,"names":["React","ReactFlow","Background","Controls","applyNodeChanges","applyEdgeChanges","useReactFlow","jsxDEV","_jsxDEV","GraphEditor","nodes","setNodes","edges","setEdges","_s","reactFlowInstance","onNodesChange","changes","nds","onEdgesChange","eds","onConnect","params","id","source","target","onNodesDelete","deleted","deletedIds","Set","map","n","filter","has","e","onEdgesDelete","onDragOver","preventDefault","dataTransfer","dropEffect","onDrop","bounds","currentTarget","getBoundingClientRect","type","getData","dropX","clientX","left","dropY","clientY","top","x","panX","y","panY","zoom","getViewport","position","newNode","Date","now","data","label","length","concat","style","width","height","tabIndex","children","fitView","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/owenzimmer/GEMS/src/components/GraphEditor.tsx"],"sourcesContent":["// GraphEditor.tsx\nimport React from 'react';\nimport {\n  ReactFlow,\n  Background,\n  Controls,\n  Node,\n  Edge,\n  OnNodesChange,\n  OnEdgesChange,\n  OnConnect,\n  OnNodesDelete,\n  OnEdgesDelete,\n  applyNodeChanges,\n  applyEdgeChanges,\n  useReactFlow,\n} from '@xyflow/react';\n\ntype NodeData = { label: string };\n\ntype GraphEditorProps = {\n  nodes: Node<NodeData>[];\n  setNodes: React.Dispatch<React.SetStateAction<Node<NodeData>[]>>;\n  edges: Edge[];\n  setEdges: React.Dispatch<React.SetStateAction<Edge[]>>;\n};\n\nexport function GraphEditor({\n  nodes,\n  setNodes,\n  edges,\n  setEdges,\n}: GraphEditorProps) {\n  const reactFlowInstance = useReactFlow();\n\n  const onNodesChange: OnNodesChange = (changes) =>\n    setNodes((nds) => applyNodeChanges(changes, nds) as Node<NodeData>[]);\n\n  const onEdgesChange: OnEdgesChange = (changes) =>\n    setEdges((eds) => applyEdgeChanges(changes, eds));\n\n  const onConnect: OnConnect = (params) =>\n    setEdges((eds) => [\n      ...eds,\n      { ...params, id: `${params.source}-${params.target}` },\n    ]);\n\n  // When the user presses Delete/Backspace with nodes selected,\n  // ReactFlow will call this with the array of deleted nodes\n  const onNodesDelete: OnNodesDelete = (deleted) => {\n    const deletedIds = new Set(deleted.map((n) => n.id));\n    // remove those nodes\n    setNodes((nds) => nds.filter((n) => !deletedIds.has(n.id)));\n    // also remove edges incident to them\n    setEdges((eds) =>\n      eds.filter((e) => !deletedIds.has(e.source) && !deletedIds.has(e.target))\n    );\n  };\n\n  // When the user deletes edges (via delete key or toolbar), this runs\n  const onEdgesDelete: OnEdgesDelete = (deleted) => {\n    const deletedIds = new Set(deleted.map((e) => e.id));\n    setEdges((eds) => eds.filter((e) => !deletedIds.has(e.id)));\n  };\n\n  // Allow drag & drop from sidebar\n  const onDragOver = (e: React.DragEvent) => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  };\n\n  const onDrop = (e: React.DragEvent) => {\n    e.preventDefault();\n    const bounds = (e.currentTarget as HTMLDivElement).getBoundingClientRect();\n    const type = e.dataTransfer.getData('application/reactflow');\n    if (!type) return;\n\n    const dropX = e.clientX - bounds.left;\n    const dropY = e.clientY - bounds.top;\n    const { x: panX, y: panY, zoom } = reactFlowInstance.getViewport();\n    const position = { x: dropX / zoom - panX, y: dropY / zoom - panY };\n\n    const newNode: Node<NodeData> = {\n      id: `${Date.now()}`,\n      type,\n      position,\n      data: { label: `Node ${nodes.length + 1}` },\n    };\n    setNodes((nds) => nds.concat(newNode));\n  };\n\n  return (\n    <div\n      style={{ width: '100%', height: '90vh' }}\n      onDrop={onDrop}\n      onDragOver={onDragOver}\n      // Make focusable so the delete key triggers the callbacks\n      tabIndex={0}\n    >\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        onConnect={onConnect}\n        onNodesDelete={onNodesDelete}\n        onEdgesDelete={onEdgesDelete}\n        fitView\n      >\n        <Background />\n        <Controls />\n      </ReactFlow>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
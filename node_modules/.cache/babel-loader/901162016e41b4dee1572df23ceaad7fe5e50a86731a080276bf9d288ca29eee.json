{"ast":null,"code":"var _jsxFileName = \"/Users/owenzimmer/GEMS/src/components/GraphEditor.tsx\",\n  _s = $RefreshSig$();\n// GraphEditor.tsx\nimport React, { useState, useCallback } from 'react';\nimport { ReactFlow, Background, Controls, applyNodeChanges, applyEdgeChanges, useReactFlow } from '@xyflow/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function GraphEditor({\n  nodes,\n  setNodes,\n  edges,\n  setEdges\n}) {\n  _s();\n  const reactFlowInstance = useReactFlow();\n\n  // track selection\n  const [selectedNodeIds, setSelectedNodeIds] = useState([]);\n  const [selectedEdgeIds, setSelectedEdgeIds] = useState([]);\n  const onSelectionChange = useCallback(({\n    nodes: selNodes,\n    edges: selEdges\n  }) => {\n    setSelectedNodeIds(selNodes.map(n => n.id));\n    setSelectedEdgeIds(selEdges.map(e => e.id));\n  }, []);\n  const onNodesChange = changes => setNodes(nds => applyNodeChanges(changes, nds));\n  const onEdgesChange = changes => setEdges(eds => applyEdgeChanges(changes, eds));\n  const onConnect = params => setEdges(eds => [...eds, {\n    ...params,\n    id: `${params.source}-${params.target}`\n  }]);\n\n  // Delete selected on key press\n  const onKeyDown = useCallback(event => {\n    if ((event.key === 'Delete' || event.key === 'Backspace') && (selectedNodeIds.length > 0 || selectedEdgeIds.length > 0)) {\n      setNodes(nds => nds.filter(n => !selectedNodeIds.includes(n.id)));\n      setEdges(eds => eds.filter(e => !selectedEdgeIds.includes(e.id)));\n    }\n  }, [selectedNodeIds, selectedEdgeIds, setNodes, setEdges]);\n\n  // drag+drop handlers omitted for brevity...\n  const onDragOver = e => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  };\n  const onDrop = e => {\n    /* your existing drop→add-node logic */\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '90vh'\n    },\n    onDrop: onDrop,\n    onDragOver: onDragOver\n    // make this div focusable so it can receive key events\n    ,\n    tabIndex: 0,\n    onKeyDown: onKeyDown,\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onConnect: onConnect,\n      onSelectionChange: onSelectionChange,\n      fitView: true,\n      children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(GraphEditor, \"flT3rCZJhY9/5iSxGj+T9tdv42w=\", false, function () {\n  return [useReactFlow];\n});\n_c = GraphEditor;\nvar _c;\n$RefreshReg$(_c, \"GraphEditor\");","map":{"version":3,"names":["React","useState","useCallback","ReactFlow","Background","Controls","applyNodeChanges","applyEdgeChanges","useReactFlow","jsxDEV","_jsxDEV","GraphEditor","nodes","setNodes","edges","setEdges","_s","reactFlowInstance","selectedNodeIds","setSelectedNodeIds","selectedEdgeIds","setSelectedEdgeIds","onSelectionChange","selNodes","selEdges","map","n","id","e","onNodesChange","changes","nds","onEdgesChange","eds","onConnect","params","source","target","onKeyDown","event","key","length","filter","includes","onDragOver","preventDefault","dataTransfer","dropEffect","onDrop","style","width","height","tabIndex","children","fitView","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/owenzimmer/GEMS/src/components/GraphEditor.tsx"],"sourcesContent":["// GraphEditor.tsx\nimport React, { useState, useCallback } from 'react';\nimport {\n  ReactFlow,\n  Background,\n  Controls,\n  Node,\n  Edge,\n  OnNodesChange,\n  OnEdgesChange,\n  OnConnect,\n  applyNodeChanges,\n  applyEdgeChanges,\n  useReactFlow,\n  SelectionChange,\n} from '@xyflow/react';\n\ntype NodeData = { label: string };\n\ntype GraphEditorProps = {\n  nodes: Node<NodeData>[];\n  setNodes: React.Dispatch<React.SetStateAction<Node<NodeData>[]>>;\n  edges: Edge[];\n  setEdges: React.Dispatch<React.SetStateAction<Edge[]>>;\n};\n\nexport function GraphEditor({\n  nodes,\n  setNodes,\n  edges,\n  setEdges,\n}: GraphEditorProps) {\n  const reactFlowInstance = useReactFlow();\n\n  // track selection\n  const [selectedNodeIds, setSelectedNodeIds] = useState<string[]>([]);\n  const [selectedEdgeIds, setSelectedEdgeIds] = useState<string[]>([]);\n\n  const onSelectionChange = useCallback(\n    ({ nodes: selNodes, edges: selEdges }: SelectionChange) => {\n      setSelectedNodeIds(selNodes.map((n) => n.id));\n      setSelectedEdgeIds(selEdges.map((e) => e.id));\n    },\n    []\n  );\n\n  const onNodesChange: OnNodesChange = (changes) =>\n    setNodes((nds) =>\n      applyNodeChanges(changes, nds) as Node<NodeData>[]\n    );\n\n  const onEdgesChange: OnEdgesChange = (changes) =>\n    setEdges((eds) => applyEdgeChanges(changes, eds));\n\n  const onConnect: OnConnect = (params) =>\n    setEdges((eds) => [\n      ...eds,\n      { ...params, id: `${params.source}-${params.target}` },\n    ]);\n\n  // Delete selected on key press\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      if ((event.key === 'Delete' || event.key === 'Backspace') && (\n        selectedNodeIds.length > 0 || selectedEdgeIds.length > 0\n      )) {\n        setNodes((nds) => nds.filter((n) => !selectedNodeIds.includes(n.id)));\n        setEdges((eds) => eds.filter((e) => !selectedEdgeIds.includes(e.id)));\n      }\n    },\n    [selectedNodeIds, selectedEdgeIds, setNodes, setEdges]\n  );\n\n  // drag+drop handlers omitted for brevity...\n  const onDragOver = (e: React.DragEvent) => { e.preventDefault(); e.dataTransfer.dropEffect = 'move'; };\n  const onDrop = (e: React.DragEvent) => {\n    /* your existing drop→add-node logic */\n  };\n\n  return (\n    <div\n      style={{ width: '100%', height: '90vh' }}\n      onDrop={onDrop}\n      onDragOver={onDragOver}\n      // make this div focusable so it can receive key events\n      tabIndex={0}\n      onKeyDown={onKeyDown}\n    >\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        onConnect={onConnect}\n        onSelectionChange={onSelectionChange}\n        fitView\n      >\n        <Background />\n        <Controls />\n      </ReactFlow>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
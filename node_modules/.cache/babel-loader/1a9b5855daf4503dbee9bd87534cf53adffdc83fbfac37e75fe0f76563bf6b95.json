{"ast":null,"code":"var _jsxFileName = \"/Users/owenzimmer/graph-dominator/src/components/Sidebar.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodeTypes = [{\n  type: 'default',\n  label: 'Default Node'\n}\n// Add more custom node types here\n];\nexport function Sidebar() {\n  const onDragStart = (event, nodeType) => {\n    event.dataTransfer.setData('application/reactflow', nodeType);\n    event.dataTransfer.effectAllowed = 'move';\n  };\n  const onKeyDown = (event, nodeType) => {\n    // Optional: trigger dragstart on Enter or Space for accessibility\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      // Since we can't do real dragstart via keyboard,\n      // you might want to handle this differently (like a button that creates node)\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    style: {\n      padding: 10,\n      borderRight: '1px solid #ddd',\n      width: 150,\n      userSelect: 'none'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Drag Nodes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), nodeTypes.map(({\n      type,\n      label\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      role: \"button\",\n      tabIndex: 0,\n      draggable: true,\n      onDragStart: e => onDragStart(e, type),\n      onKeyDown: e => onKeyDown(e, type),\n      style: {\n        padding: 8,\n        marginBottom: 8,\n        border: '1px solid #ccc',\n        borderRadius: 3,\n        cursor: 'grab',\n        background: '#fff',\n        textAlign: 'center'\n      },\n      \"aria-grabbed\": \"false\",\n      children: label\n    }, type, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_c = Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","nodeTypes","type","label","Sidebar","onDragStart","event","nodeType","dataTransfer","setData","effectAllowed","onKeyDown","key","preventDefault","style","padding","borderRight","width","userSelect","children","fileName","_jsxFileName","lineNumber","columnNumber","map","role","tabIndex","draggable","e","marginBottom","border","borderRadius","cursor","background","textAlign","_c","$RefreshReg$"],"sources":["/Users/owenzimmer/graph-dominator/src/components/Sidebar.tsx"],"sourcesContent":["import React from 'react';\n\nconst nodeTypes = [\n  { type: 'default', label: 'Default Node' },\n  // Add more custom node types here\n];\n\nexport function Sidebar() {\n  const onDragStart = (event: React.DragEvent, nodeType: string) => {\n    event.dataTransfer.setData('application/reactflow', nodeType);\n    event.dataTransfer.effectAllowed = 'move';\n  };\n\n  const onKeyDown = (event: React.KeyboardEvent, nodeType: string) => {\n    // Optional: trigger dragstart on Enter or Space for accessibility\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      // Since we can't do real dragstart via keyboard,\n      // you might want to handle this differently (like a button that creates node)\n    }\n  };\n\n  return (\n    <aside\n      style={{\n        padding: 10,\n        borderRight: '1px solid #ddd',\n        width: 150,\n        userSelect: 'none',\n      }}\n    >\n      <h4>Drag Nodes</h4>\n      {nodeTypes.map(({ type, label }) => (\n        <div\n          key={type}\n          role=\"button\"\n          tabIndex={0}\n          draggable={true}\n          onDragStart={(e) => onDragStart(e, type)}\n          onKeyDown={(e) => onKeyDown(e, type)}\n          style={{\n            padding: 8,\n            marginBottom: 8,\n            border: '1px solid #ccc',\n            borderRadius: 3,\n            cursor: 'grab',\n            background: '#fff',\n            textAlign: 'center',\n          }}\n          aria-grabbed=\"false\"\n        >\n          {label}\n        </div>\n      ))}\n    </aside>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAG,CAChB;EAAEC,IAAI,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAe;AACzC;AAAA,CACD;AAED,OAAO,SAASC,OAAOA,CAAA,EAAG;EACxB,MAAMC,WAAW,GAAGA,CAACC,KAAsB,EAAEC,QAAgB,KAAK;IAChED,KAAK,CAACE,YAAY,CAACC,OAAO,CAAC,uBAAuB,EAAEF,QAAQ,CAAC;IAC7DD,KAAK,CAACE,YAAY,CAACE,aAAa,GAAG,MAAM;EAC3C,CAAC;EAED,MAAMC,SAAS,GAAGA,CAACL,KAA0B,EAAEC,QAAgB,KAAK;IAClE;IACA,IAAID,KAAK,CAACM,GAAG,KAAK,OAAO,IAAIN,KAAK,CAACM,GAAG,KAAK,GAAG,EAAE;MAC9CN,KAAK,CAACO,cAAc,CAAC,CAAC;MACtB;MACA;IACF;EACF,CAAC;EAED,oBACEb,OAAA;IACEc,KAAK,EAAE;MACLC,OAAO,EAAE,EAAE;MACXC,WAAW,EAAE,gBAAgB;MAC7BC,KAAK,EAAE,GAAG;MACVC,UAAU,EAAE;IACd,CAAE;IAAAC,QAAA,gBAEFnB,OAAA;MAAAmB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClBtB,SAAS,CAACuB,GAAG,CAAC,CAAC;MAAEtB,IAAI;MAAEC;IAAM,CAAC,kBAC7BH,OAAA;MAEEyB,IAAI,EAAC,QAAQ;MACbC,QAAQ,EAAE,CAAE;MACZC,SAAS,EAAE,IAAK;MAChBtB,WAAW,EAAGuB,CAAC,IAAKvB,WAAW,CAACuB,CAAC,EAAE1B,IAAI,CAAE;MACzCS,SAAS,EAAGiB,CAAC,IAAKjB,SAAS,CAACiB,CAAC,EAAE1B,IAAI,CAAE;MACrCY,KAAK,EAAE;QACLC,OAAO,EAAE,CAAC;QACVc,YAAY,EAAE,CAAC;QACfC,MAAM,EAAE,gBAAgB;QACxBC,YAAY,EAAE,CAAC;QACfC,MAAM,EAAE,MAAM;QACdC,UAAU,EAAE,MAAM;QAClBC,SAAS,EAAE;MACb,CAAE;MACF,gBAAa,OAAO;MAAAf,QAAA,EAEnBhB;IAAK,GAjBDD,IAAI;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAkBN,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEZ;AAACY,EAAA,GAjDe/B,OAAO;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}